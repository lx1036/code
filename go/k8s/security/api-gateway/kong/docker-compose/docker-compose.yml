# https://github.com/Kong/docker-kong/blob/master/compose/docker-compose.yml
version: "3.7"
services:
  kong-database:
    image: postgres:9.6
    container_name: kong-db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=kong
      - POSTGRES_USER=kong # 访问数据库的用户
      - POSTGRES_PASSWORD=kong
    restart: on-failure
    volumes:
      - kong_db_data:/var/lib/postgresql/data # 数据库数据落地
      - ./db.sql:/docker-entrypoint-initdb.d/db.sql # 创建kong-dashboard db，给kong-dashboard service用
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - kong-network

  # migrate 数据表
  kong-migrations:
    image: kong:1.5.1
    command: kong migrations bootstrap # Bootstrap the database and run all migrations
    environment:
      KONG_DATABASE: postgres # 数据持久化方式，使用postgres数据库
      KONG_PG_HOST: kong-database.svc # 数据库容器名称,Kong连接数据时使用些名称
      KONG_PG_DATABASE: kong # 数据库名称
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    restart: on-failure
    links:
      - kong-database:kong-database.svc
    depends_on:
      - kong-database
    networks:
      - kong-network

  kong:
    image: kong:1.5.1
    container_name: kong-server
    environment:
      - "KONG_DATABASE=postgres" # 数据持久化方式，使用postgres数据库
      - "KONG_PG_HOST=kong-database.svc" # 数据库容器名称,Kong连接数据时使用些名称
      - "KONG_PG_DATABASE=kong" # 数据库名称
      - "KONG_PG_USER=kong"
      - "KONG_PG_PASSWORD=kong"
      - "KONG_PROXY_ACCESS_LOG=/dev/stdout" # 日志记录目录
      - "KONG_ADMIN_ACCESS_LOG=/dev/stdout"
      - "KONG_PROXY_ERROR_LOG=/dev/stderr"
      - "KONG_ADMIN_ERROR_LOG=/dev/stderr"
      - "KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl"
    ports:
      - "8000:8000/tcp"
      - "8001:8001/tcp"
      - "8443:8443/tcp"
      - "8444:8444/tcp"
    depends_on:
      - kong-migrations
    links:
      - kong-database:kong-database.svc
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    networks:
      - kong-network

  kong-dashboard:
    image: pantsel/konga:0.14.9
    container_name: kong-dashboard
    environment:
      - NODE_ENV=development # if production, 需要手动migrate数据库：https://github.com/pantsel/konga#production
      - DB_ADAPTER=postgres
      - DB_HOST=kong-database.svc
      - DB_PORT=5432
      - DB_USER=kong
      - DB_PASSWORD=kong
      - DB_DATABASE=konga
    links:
      - kong:kong-server.svc # 与kong server建立connection时填 http://kong-server.svc:8001
      - kong-database:kong-database.svc
    ports:
      - 1337:1337
    depends_on:
      - kong
      - kong-database
    restart: on-failure
    networks:
      - kong-network

networks:
  kong-network:
    external: true

volumes:
  kong_db_data: {}
