# https://github.com/Kong/docker-kong/blob/master/compose/docker-compose.yml
version: "3.7"
services:
  #  kong-dashboard-prepare:
  #    image: pantsel/konga
  #    command: prepare -a postgres -u postgresql://localhost:5432/konga
  #
  kong-database:
    image: postgres:9.6
    container_name: kong-db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${KONG_DATABASE}
      - POSTGRES_USER=${KONG_DATABASE_USER} # 访问数据库的用户
      - POSTGRES_PASSWORD=${KONG_DATABASE_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    tty: true
    stdin_open: true
    volumes:
      - /private/etc/localtime:/etc/localtime:ro # 同步时间
      - kong_data:/var/lib/postgresql/data # 数据库数据落地
    networks:
      - kong-net

  kong:
    image: kong:1.5.1
    container_name: kong
    environment:
      - "KONG_DATABASE=postgres" # 数据持久化方式，使用postgres数据库
      - "KONG_PG_HOST=kong-database.svc" # 数据库容器名称,Kong连接数据时使用些名称
      - "KONG_PG_DATABASE=${KONG_DATABASE}" # 数据库名称
      - "KONG_PG_USER=${KONG_DATABASE_USER}"
      - "KONG_PG_PASSWORD=${KONG_DATABASE_PASSWORD}"
      - "KONG_PROXY_ACCESS_LOG=/dev/stdout" # 日志记录目录
      - "KONG_ADMIN_ACCESS_LOG=/dev/stdout"
      - "KONG_PROXY_ERROR_LOG=/dev/stderr"
      - "KONG_ADMIN_ERROR_LOG=/dev/stderr"
      - "KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl"
    ports:
      - "8000:8000/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "8443:8443/tcp"
      - "127.0.0.1:8444:8444/tcp"
    networks:
      - kong-net
    depends_on:
      - kong-database
    links:
      - kong-database:kong-database.svc
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  kong-dashboard:
    image: pantsel/konga
    container_name: kong-admin
    environment:
      #      - "TOKEN_SECRET=password"
      - NODE_ENV=development # if production, exec `prepare -a postgres -u postgresql://${KONG_DATABASE_USER}:${KONG_DATABASE_PASSWORD}@db:5432/konga`
      - DB_ADAPTER=postgres
      - DB_HOST=kong-database.svc
      - DB_PORT=5432
      - DB_USER=${KONG_DATABASE_USER}
      - DB_PASSWORD=${KONG_DATABASE_PASSWORD}
      - DB_DATABASE=${KONG_DATABASE}
    links:
      - kong:kong-admin # 与kong server建立connection时填 http://kong-admin:8001
      - kong-database:kong-database.svc
    ports:
      - 1337:1337
    networks:
      - kong-net
    depends_on:
      - kong-database

  #  kong-bootstrap:
  #    image: kong:1.5.1
  #    command: kong migrations bootstrap
  #    depends_on:
  #      - kong-database
  #    environment:
  #      - "KONG_DATABASE=postgres" # 数据持久化方式，使用postgres数据库
  #      - "KONG_PG_HOST=kong-database.svc" # 数据库容器名称,Kong连接数据时使用些名称
  #      - "KONG_PG_DATABASE=${KONG_DATABASE}" # 数据库名称
  #      - "KONG_PG_USER=${KONG_DATABASE_USER}"
  #      - "KONG_PG_PASSWORD=${KONG_DATABASE_PASSWORD}"
  #    networks:
  #      - kong-net
  #    restart: on-failure

  kong-migrations:
    image: kong:1.5.1
    command: kong migrations bootstrap && kong migrations finish
    depends_on:
      - kong-database
    environment:
      - "KONG_DATABASE=postgres" # 数据持久化方式，使用postgres数据库
      - "KONG_PG_HOST=kong-database.svc" # 数据库容器名称,Kong连接数据时使用些名称
      - "KONG_PG_DATABASE=${KONG_DATABASE}" # 数据库名称
      - "KONG_PG_USER=${KONG_DATABASE_USER}"
      - "KONG_PG_PASSWORD=${KONG_DATABASE_PASSWORD}"
    networks:
      - kong-net
    restart: on-failure





networks:
  kong-net:
    external: true

volumes:
  kong_data: {}
