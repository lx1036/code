
- name: prepare some dirs
  file: name={{ item }} state=directory
  with_items:
    - "{{ base_dir }}/.cluster/ssl"
    - "{{ base_dir }}/.cluster/backup"

- name: 本地设置 bin 目录权限
  file: path={{ base_dir }}/bin state=directory mode=0755 recurse=yes

# 注册变量p，根据p的stat信息判断是否已经生成过ca证书，如果没有，下一步生成证书
# 如果已经有ca证书，为了保证整个安装的幂等性，跳过证书生成的步骤
- name: 读取ca证书stat信息
  stat: path="{{ base_dir }}/.cluster/ssl/ca.pem"
  register: p

- name: 准备CA配置文件和签名请求
  template: src={{ item }}.j2 dest={{ base_dir }}/.cluster/ssl/{{ item }}
  with_items:
    - "ca-config.json"
    - "ca-csr.json"
  when: p.stat.isreg is not defined

- name: 生成 CA 证书和私钥
  when: p.stat.isreg is not defined
  shell: "cd {{ base_dir }}/.cluster/ssl && \
	 {{ base_dir }}/bin/cfssl gencert -initca ca-csr.json | {{ base_dir }}/bin/cfssljson -bare ca"

#----------- 创建admin kubectl kubeconfig文件: /root/.kube/config
- import_tasks: create-kubectl-kubeconfig.yml
  tags: create_kctl_cfg

#------------创建配置文件: kube-proxy.kubeconfig
- import_tasks: create-kube-proxy-kubeconfig.yml

#------------创建配置文件: kube-controller-manager.kubeconfig
- import_tasks: create-kube-controller-manager-kubeconfig.yml

#------------创建配置文件: kube-scheduler.kubeconfig
- import_tasks: create-kube-scheduler-kubeconfig.yml

#-----------可选创建只读kubeconfig文件: /root/.kube/read.config
- import_tasks: create-kubectl-ro-kubeconfig.yml
  when: "CREATE_READONLY_KUBECONFIG"

# ansible 控制端一些易用性配置
- name: 本地创建 easzctl 工具的软连接
  file: src={{ base_dir }}/tools/easzctl dest=/usr/bin/easzctl state=link



