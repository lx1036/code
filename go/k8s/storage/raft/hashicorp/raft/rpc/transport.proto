



syntax = "proto3";

option go_package = "./;rpc";
import "google/protobuf/timestamp.proto";


service Transport {
  rpc AppendEntriesPipeline(stream AppendEntriesRequest) returns (stream AppendEntriesResponse) {}

  // AppendEntries performs a single append entries request / response.
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}

  // RequestVote is the command used by a candidate to ask a Raft peer for a vote in an election.
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse) {}

  // TimeoutNow is used to start a leadership transfer to the target node.
  rpc TimeoutNow(TimeoutNowRequest) returns (TimeoutNowResponse) {}

  // InstallSnapshot is the command sent to a Raft peer to bootstrap its log (and state machine) from a snapshot on another peer.
  rpc InstallSnapshot(stream InstallSnapshotRequest) returns (InstallSnapshotResponse) {}
}

enum LogType {
  COMMAND = 0;
  NOOP = 1;
  BARRIER = 2;
  CONFIGURATION = 3;
}

// Log entries are replicated to all members of the Raft cluster
// and form the heart of the replicated state machine.
message Log {
  uint64 index = 1;
  uint64 term = 2;
  LogType type = 3;
  bytes data = 4;
  bytes extensions = 5;
  google.protobuf.Timestamp appended_at = 6;
}

message AppendEntriesRequest {
  uint64 term = 1;
  bytes leader = 2;
  uint64 prev_log_index = 3;
  uint64 prev_log_term = 4;
  repeated Log entries = 5;
  uint64 leader_commit_index = 6;
}

message AppendEntriesResponse {
  uint64 term = 1;
  uint64 last_log = 2;
  bool success = 3;
  bool no_retry_backoff = 4;
}

message RequestVoteRequest {
  uint64 term = 1;
  bytes candidate = 2;
  uint64 last_log_index = 3;
  uint64 last_log_term = 4;
  bool leadership_transfer = 5;
}

message RequestVoteResponse {
  uint64 term = 1;
  bool granted = 2;
}

message TimeoutNowRequest {}

message TimeoutNowResponse {}

message InstallSnapshotRequest {
  uint64 term = 1;
  bytes leader = 2;
  uint64 last_log_index = 3;
  uint64 last_log_term = 4;
  bytes configuration = 5;
  uint64 configuration_index = 6;
  int64 size = 7;
}

message InstallSnapshotResponse {
  uint64 term = 1;
  bool success = 2;
}
