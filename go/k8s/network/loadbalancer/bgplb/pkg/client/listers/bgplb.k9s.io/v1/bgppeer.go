/*
Copyright 2021 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s-lx1036/k8s/network/loadbalancer/bgplb/pkg/apis/bgplb.k9s.io/v1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BgpPeerLister helps list BgpPeers.
// All objects returned here must be treated as read-only.
type BgpPeerLister interface {
	// List lists all BgpPeers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.BgpPeer, err error)
	// BgpPeers returns an object that can list and get BgpPeers.
	BgpPeers(namespace string) BgpPeerNamespaceLister
	BgpPeerListerExpansion
}

// bgpPeerLister implements the BgpPeerLister interface.
type bgpPeerLister struct {
	indexer cache.Indexer
}

// NewBgpPeerLister returns a new BgpPeerLister.
func NewBgpPeerLister(indexer cache.Indexer) BgpPeerLister {
	return &bgpPeerLister{indexer: indexer}
}

// List lists all BgpPeers in the indexer.
func (s *bgpPeerLister) List(selector labels.Selector) (ret []*v1.BgpPeer, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.BgpPeer))
	})
	return ret, err
}

// BgpPeers returns an object that can list and get BgpPeers.
func (s *bgpPeerLister) BgpPeers(namespace string) BgpPeerNamespaceLister {
	return bgpPeerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BgpPeerNamespaceLister helps list and get BgpPeers.
// All objects returned here must be treated as read-only.
type BgpPeerNamespaceLister interface {
	// List lists all BgpPeers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.BgpPeer, err error)
	// Get retrieves the BgpPeer from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.BgpPeer, error)
	BgpPeerNamespaceListerExpansion
}

// bgpPeerNamespaceLister implements the BgpPeerNamespaceLister
// interface.
type bgpPeerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BgpPeers in the indexer for a given namespace.
func (s bgpPeerNamespaceLister) List(selector labels.Selector) (ret []*v1.BgpPeer, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.BgpPeer))
	})
	return ret, err
}

// Get retrieves the BgpPeer from the indexer for a given namespace and name.
func (s bgpPeerNamespaceLister) Get(name string) (*v1.BgpPeer, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("bgppeer"), name)
	}
	return obj.(*v1.BgpPeer), nil
}
