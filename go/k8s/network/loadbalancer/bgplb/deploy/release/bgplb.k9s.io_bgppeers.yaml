---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: bgppeers.bgplb.k9s.io
spec:
  group: bgplb.k9s.io
  names:
    kind: BGPPeer
    listKind: BGPPeerList
    plural: bgppeers
    shortNames:
    - bgpp
    singular: bgppeer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.peerAddress
      name: PeerAddress
      type: string
    - jsonPath: .spec.peerAsn
      name: PeerAsn
      type: string
    - jsonPath: .spec.peerPort
      name: PeerPort
      type: integer
    - jsonPath: .spec.sourceAddress
      name: SourceAddress
      type: string
    - jsonPath: .spec.myAsn
      name: MyAsn
      type: string
    - jsonPath: .spec.sourcePort
      name: SourcePort
      type: integer
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              myAsn:
                type: integer
              nodeSelector:
                description: A label selector is a label query over a set of resources.
                  The result of matchLabels and matchExpressions are ANDed. An empty
                  label selector matches all objects. A null label selector matches
                  no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              peerAddress:
                type: string
              peerAsn:
                type: integer
              peerPort:
                type: integer
              sourceAddress:
                type: string
              sourcePort:
                type: integer
            required:
            - myAsn
            - peerAddress
            - peerAsn
            type: object
          status:
            properties:
              nodesPeerStatus:
                additionalProperties:
                  properties:
                    peerState:
                      properties:
                        adminState:
                          type: string
                        authPassword:
                          type: string
                        description:
                          type: string
                        flops:
                          format: int32
                          type: integer
                        localAs:
                          format: int32
                          type: integer
                        messages:
                          properties:
                            received:
                              properties:
                                discarded:
                                  type: string
                                keepalive:
                                  type: string
                                notification:
                                  type: string
                                open:
                                  type: string
                                refresh:
                                  type: string
                                total:
                                  type: string
                                update:
                                  type: string
                                withdrawPrefix:
                                  type: string
                                withdrawUpdate:
                                  type: string
                              type: object
                            sent:
                              properties:
                                discarded:
                                  type: string
                                keepalive:
                                  type: string
                                notification:
                                  type: string
                                open:
                                  type: string
                                refresh:
                                  type: string
                                total:
                                  type: string
                                update:
                                  type: string
                                withdrawPrefix:
                                  type: string
                                withdrawUpdate:
                                  type: string
                              type: object
                          type: object
                        neighborAddress:
                          type: string
                        outQ:
                          format: int32
                          type: integer
                        peerAs:
                          format: int32
                          type: integer
                        peerGroup:
                          type: string
                        peerType:
                          format: int32
                          type: integer
                        queues:
                          properties:
                            input:
                              format: int32
                              type: integer
                            output:
                              format: int32
                              type: integer
                          type: object
                        removePrivateAs:
                          format: int32
                          type: integer
                        routeFlapDamping:
                          type: boolean
                        routerId:
                          type: string
                        sendCommunity:
                          format: int32
                          type: integer
                        sessionState:
                          type: string
                      type: object
                    timersState:
                      properties:
                        connectRetry:
                          type: string
                        downtime:
                          type: string
                        holdTime:
                          type: string
                        keepaliveInterval:
                          type: string
                        minimumAdvertisementInterval:
                          type: string
                        negotiatedHoldTime:
                          type: string
                        uptime:
                          type: string
                      type: object
                  type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
